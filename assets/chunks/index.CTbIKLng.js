const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/Chart.DKtxStBt.js","assets/chunks/framework.Z8yrkugl.js"])))=>i.map(i=>d[i]);
import{u as a,o as s,b as i,k as t,U as r,V as c}from"./framework.Z8yrkugl.js";const n=JSON.parse(`{"html":"<div id=\\"k-line-chart\\" style=\\"height:430px\\"/>","js":"import { init } from 'klinecharts'\\n\\nfunction genData (timestamp = new Date().getTime(), length = 800) {\\n  let basePrice = 5000\\n  timestamp = Math.floor(timestamp / 1000 / 60) * 60 * 1000 - length * 60 * 1000\\n  const dataList = []\\n  for (let i = 0; i < length; i++) {\\n    const prices = []\\n    for (let j = 0; j < 4; j++) {\\n      prices.push(basePrice + Math.random() * 60 - 30)\\n    }\\n    prices.sort()\\n    const open = +(prices[Math.round(Math.random() * 3)].toFixed(2))\\n    const high = +(prices[3].toFixed(2))\\n    const low = +(prices[0].toFixed(2))\\n    const close = +(prices[Math.round(Math.random() * 3)].toFixed(2))\\n    const volume = Math.round(Math.random() * 100) + 10\\n    const turnover = (open + high + low + close) / 4 * volume\\n    dataList.push({ timestamp, open, high,low, close, volume, turnover })\\n\\n    basePrice = close\\n    timestamp += 60 * 1000\\n  }\\n  return dataList\\n}\\n\\nconst chart = init('k-line-chart')\\nchart.applyNewData(genData())"}`),d={__name:"index",setup(l){const e=r(()=>c(()=>import("./Chart.DKtxStBt.js"),__vite__mapDeps([0,1]))),{title:o}=a();return(h,m)=>(s(),i(t(e),{js:t(n).js,html:t(n).html,title:t(o)},null,8,["js","html","title"]))}};export{d as _};
