const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/Chart.DKtxStBt.js","assets/chunks/framework.Z8yrkugl.js"])))=>i.map(i=>d[i]);
import{u as i,z as s,q as d,o as c,b as p,k as n,U as h,V as u}from"./framework.Z8yrkugl.js";const o=JSON.parse(`{"css":".button-container {\\n  display: flex;\\n  flex-wrap: wrap;\\n  align-items: center;\\n  gap: 8px;\\n  margin-top: 10px;\\n  padding: 10px 22px;\\n}\\n\\n.button-container button {\\n  padding: 2px 6px;\\n  background-color: #1677FF;\\n  border-radius: 4px;\\n  font-size: 12px;\\n  color: #fff;\\n  outline: none;\\n  border: none;\\n}","html":"<div id=\\"container\\">\\n  <div id=\\"k-line-chart\\" style=\\"height:430px\\">\\n</div>","js":"import { init, registerStyles } from 'klinecharts'\\nimport './index.css'\\n\\nfunction genData (timestamp = new Date().getTime(), length = 800) {\\n  let basePrice = 5000\\n  timestamp = Math.floor(timestamp / 1000 / 60) * 60 * 1000 - length * 60 * 1000\\n  const dataList = []\\n  for (let i = 0; i < length; i++) {\\n    const prices = []\\n    for (let j = 0; j < 4; j++) {\\n      prices.push(basePrice + Math.random() * 60 - 30)\\n    }\\n    prices.sort()\\n    const open = +(prices[Math.round(Math.random() * 3)].toFixed(2))\\n    const high = +(prices[3].toFixed(2))\\n    const low = +(prices[0].toFixed(2))\\n    const close = +(prices[Math.round(Math.random() * 3)].toFixed(2))\\n    const volume = Math.round(Math.random() * 100) + 10\\n    const turnover = (open + high + low + close) / 4 * volume\\n    dataList.push({ timestamp, open, high,low, close, volume, turnover })\\n\\n    basePrice = close\\n    timestamp += 60 * 1000\\n  }\\n  return dataList\\n}\\n\\nconst red = '#F92855'\\nconst green = '#2DC08E'\\n\\nconst alphaRed = 'rgba(249, 40, 85, .7)'\\nconst alphaGreen = 'rgba(45, 192, 142, .7)'\\n\\nregisterStyles('green_rise_red_fall', {\\n  candle: {\\n    bar: {\\n      upColor: green,\\n      downColor: red,\\n      upBorderColor: green,\\n      downBorderColor: red,\\n      upWickColor: green,\\n      downWickColor: red\\n    },\\n    priceMark: {\\n      last: {\\n        upColor: green,\\n        downColor: red\\n      }\\n    }\\n  },\\n  indicator: {\\n    ohlc: {\\n      upColor: alphaGreen,\\n      downColor: alphaRed\\n    },\\n    bars: [{\\n      style: 'fill',\\n      borderStyle: 'solid',\\n      borderSize: 1,\\n      borderDashedValue: [2, 2],\\n      upColor: alphaGreen,\\n      downColor: alphaRed,\\n      noChangeColor: '#888888'\\n    }],\\n    circles: [{\\n      style: 'fill',\\n      borderStyle: 'solid',\\n      borderSize: 1,\\n      borderDashedValue: [2, 2],\\n      upColor: alphaGreen,\\n      downColor: alphaRed,\\n      noChangeColor: '#888888'\\n    }]\\n  }\\n})\\n\\nregisterStyles('red_rise_green_fall', {\\n  candle: {\\n    bar: {\\n      upColor: red,\\n      downColor: green,\\n      upBorderColor: red,\\n      downBorderColor: green,\\n      upWickColor: red,\\n      downWickColor: green,\\n    },\\n    priceMark: {\\n      last: {\\n        upColor: red,\\n        downColor: green,\\n      }\\n    }\\n  },\\n  indicator: {\\n    ohlc: {\\n      upColor: alphaRed,\\n      downColor: alphaGreen\\n    },\\n    bars: [{\\n      style: 'fill',\\n      borderStyle: 'solid',\\n      borderSize: 1,\\n      borderDashedValue: [2, 2],\\n      upColor: alphaRed,\\n      downColor: alphaGreen,\\n      noChangeColor: '#888888'\\n    }],\\n    circles: [{\\n      style: 'fill',\\n      borderStyle: 'solid',\\n      borderSize: 1,\\n      borderDashedValue: [2, 2],\\n      upColor: alphaRed,\\n      downColor: alphaGreen,\\n      noChangeColor: '#888888'\\n    }]\\n  }\\n})\\n\\nconst chart = init('k-line-chart')\\nchart.createIndicator('VOL')\\nchart.applyNewData(genData())\\n\\nfunction setTheme (theme) {\\n  chart.setStyles(theme)\\n  if (theme === 'light') {\\n    document.getElementById('k-line-chart').style.backgroundColor = '#ffffff'\\n  } else if (theme === 'dark') {\\n    document.getElementById('k-line-chart').style.backgroundColor = '#1b1b1f'\\n  }\\n}\\n\\n// 以下仅仅是为了协助代码演示，在实际项目中根据情况进行调整。\\n// The following is only for the purpose of assisting in code demonstration, and adjustments will be made according to the actual situation in the project.\\nconst container = document.getElementById('container')\\nconst buttonContainer = document.createElement('div')\\nbuttonContainer.className = 'button-container'\\nconst items = [\\n  { key: 'light', text: '浅色-Light' },\\n  { key: 'dark', text: '深色-Dark' },\\n  { key: 'green_rise_red_fall', text: '绿涨红跌-Green rise and red fall' },\\n  { key: 'red_rise_green_fall', text: '红涨绿跌-Red rise and green fall' }\\n]\\nitems.forEach(({ key, text }) => {\\n  const button = document.createElement('button')\\n  button.innerText = text\\n  button.addEventListener('click', () => { setTheme(key) })\\n  buttonContainer.appendChild(button)\\n})\\ncontainer.appendChild(buttonContainer)"}`),f={__name:"index",setup(m){const a=h(()=>u(()=>import("./Chart.DKtxStBt.js"),__vite__mapDeps([0,1]))),{isDark:t,title:l}=i();return s(()=>{document.getElementById("k-line-chart").style.backgroundColor=t.value?"#1b1b1f":"#ffffff"}),d(t,r=>{const e=document.getElementById("k-line-chart");r?e.style.backgroundColor="#1b1b1f":e.style.backgroundColor="#ffffff"}),(r,e)=>(c(),p(n(a),{js:n(o).js,html:n(o).html,css:n(o).css,title:n(l)},null,8,["js","html","css","title"]))}};export{f as _};
